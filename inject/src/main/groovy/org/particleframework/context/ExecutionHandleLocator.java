/*
 * Copyright 2017 original authors
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. 
 */
package org.particleframework.context;

import org.particleframework.inject.MethodExecutionHandle;

import java.util.Optional;

/**
 * Interface for components that are able to locate and return {@link org.particleframework.inject.ExecutionHandle} instances
 * for beans
 *
 * @author Graeme Rocher
 * @since 1.0
 */
public interface ExecutionHandleLocator {
    /**
     * Finds an optimized execution handle for invoking a bean method. The execution handle may or may not be implemented by generated byte code.
     *
     * @param <R> The result type of the execution handle
     * @param beanType The bean type
     * @param method The method
     * @param arguments The arguments
     * @return The execution handle
     */
    <R> Optional<MethodExecutionHandle<R>> findExecutionHandle(Class<?> beanType, String method, Class... arguments);
}
